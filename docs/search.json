[{"path":"http://rubenarslan.github.io/formr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Ruben C. Arslan Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://rubenarslan.github.io/formr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ruben Arslan. Author, maintainer.","code":""},{"path":"http://rubenarslan.github.io/formr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Arslan R (2025). formr: formr survey framework accompanying R package. R package version 0.11.1, http://rubenarslan.github.io/formr/.","code":"@Manual{,   title = {formr: formr survey framework accompanying R package},   author = {Ruben Arslan},   year = {2025},   note = {R package version 0.11.1},   url = {http://rubenarslan.github.io/formr/}, }"},{"path":[]},{"path":"http://rubenarslan.github.io/formr/index.html","id":"the-accompanying-r-package-for-the-study-framework-formr","dir":"","previous_headings":"","what":"The accompanying R package for the study framework formr","title":"formr survey framework accompanying R package","text":"formr R package provides convenience functions may useful users formr (formr.org), online survey framework heavily relies R via openCPU. functions may useful others . functions conveniently generate individual feedback graphics, just shorthands make certain common operations formr palatable R novices. large number functions help connect formr, extract data, correctly type data (dates, numbers, text etc.), automatically aggregate items scale . R package can used inside formr.org, always loaded default.","code":""},{"path":"http://rubenarslan.github.io/formr/index.html","id":"documentation","dir":"","previous_headings":"","what":"documentation","title":"formr survey framework accompanying R package","text":"https://rubenarslan.github.io/formr","code":""},{"path":"http://rubenarslan.github.io/formr/index.html","id":"install","dir":"","previous_headings":"","what":"install","title":"formr survey framework accompanying R package","text":"want install R package locally (e.g. connect formr fetch data nice format ), run:","code":"install.packages(\"remotes\") remotes::install_github(\"rubenarslan/formr\")"},{"path":"http://rubenarslan.github.io/formr/reference/aggregate_and_document_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate variables and remember which variables this were — aggregate_and_document_scale","title":"Aggregate variables and remember which variables this were — aggregate_and_document_scale","text":"Copied codebook. resulting variables attribute scale_item_names containing basis aggregation. label attribute refer common stem aggregated variable names (), number variables, aggregation function.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/aggregate_and_document_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate variables and remember which variables this were — aggregate_and_document_scale","text":"","code":"aggregate_and_document_scale(items, fun = rowMeans, stem = NULL)"},{"path":"http://rubenarslan.github.io/formr/reference/aggregate_and_document_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate variables and remember which variables this were — aggregate_and_document_scale","text":"items data.frame items aggregated fun aggregation function, defaults rowMeans na.rm = FALSE stem common stem variables, specify auto-detected longest common stem variable names","code":""},{"path":"http://rubenarslan.github.io/formr/reference/aggregate_and_document_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate variables and remember which variables this were — aggregate_and_document_scale","text":"","code":"testdf <- data.frame(bfi_neuro_1 = rnorm(20), bfi_neuro_2 = rnorm(20),                     bfi_neuro_3R = rnorm(20), age = rpois(20, 30)) item_names <- c('bfi_neuro_1', 'bfi_neuro_2', 'bfi_neuro_3R') testdf$bfi_neuro <- aggregate_and_document_scale(testdf[, item_names]) testdf$bfi_neuro #>  [1] -0.287284749 -0.006951671 -1.263924018  0.160240530  0.984951589 #>  [6]  1.268794692 -0.903711211  0.104811152 -0.317597895 -1.235608530 #> [11]  0.414583429  0.187411304  0.700874388  0.003912358  0.218008596 #> [16] -0.482393654 -1.568738280  0.783572677 -0.043890297  0.122196267 #> attr(,\"scale_item_names\") #> [1] \"bfi_neuro_1\"  \"bfi_neuro_2\"  \"bfi_neuro_3R\" #> attr(,\"label\") #> [1] \"3 bfi_neuro items aggregated by rowMeans\""},{"path":"http://rubenarslan.github.io/formr/reference/as.data.frame.formr_item_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform formr_item_list into a data.frame for ease of use — as.data.frame.formr_item_list","title":"Transform formr_item_list into a data.frame for ease of use — as.data.frame.formr_item_list","text":"function just turns formr_item_list data.frame. reason, lists come data.frames default 'choices' list . transforming, choice column contains collapsed choice list, may less useful purposes.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/as.data.frame.formr_item_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform formr_item_list into a data.frame for ease of use — as.data.frame.formr_item_list","text":"","code":"# S3 method for class 'formr_item_list' as.data.frame(x, row.names, ...)"},{"path":"http://rubenarslan.github.io/formr/reference/as.data.frame.formr_item_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform formr_item_list into a data.frame for ease of use — as.data.frame.formr_item_list","text":"x formr_item_list row.names used ... used","code":""},{"path":"http://rubenarslan.github.io/formr/reference/as.data.frame.formr_item_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform formr_item_list into a data.frame for ease of use — as.data.frame.formr_item_list","text":"","code":"if (FALSE) { # \\dontrun{ formr_connect(email = 'you@example.net', password = 'zebrafinch' ) as.data.frame(formr_items(survey_name = 'training_diary' )) } # } items = formr_items(path =  system.file('extdata/gods_example_items.json', package = 'formr', mustWork = TRUE)) items_df = as.data.frame(items) items_df[1,] #>        type choice_list type_options name                           label #> 1 mc_button        gods              gods Who do you believe in the most? #>                      label_parsed optional class showif value block_order #> 1 Who do you believe in the most?        0  <NA>   <NA>  <NA>        <NA> #>   item_order                                                       choices #> 1          1 glob=Glob,cthulhu=Cthulhu,spaghetti_monster=Spaghetti Monster #>   index #> 1     1"},{"path":"http://rubenarslan.github.io/formr/reference/asis_knit_child.html","id":null,"dir":"Reference","previous_headings":"","what":"knit_child as is — asis_knit_child","title":"knit_child as is — asis_knit_child","text":"slightly modifies knitr::knit_child() function different defaults. environment defaults calling environment. output receives class knit_asis, output rendered \"\" knitr calling inside chunk (need set results='asis' chunk option). defaults quiet = TRUE","code":""},{"path":"http://rubenarslan.github.io/formr/reference/asis_knit_child.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"knit_child as is — asis_knit_child","text":"","code":"asis_knit_child(   input = NULL,   text = NULL,   ...,   quiet = TRUE,   options = NULL,   envir = parent.frame() )"},{"path":"http://rubenarslan.github.io/formr/reference/asis_knit_child.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"knit_child as is — asis_knit_child","text":"input specify file path , read passed knitr (avoid working directory mess) text passed knitr::knit_child() ... passed knitr::knit_child() quiet passed knitr::knit_child() options defaults NULL. envir passed knitr::knit_child()","code":""},{"path":"http://rubenarslan.github.io/formr/reference/asis_knit_child.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"knit_child as is — asis_knit_child","text":"default calling environment? Typically function defaults global environment. makes sense want use knit_children context rest document. However, may also want use knit_children inside functions e.g. summarise regression using set commands (e.g. plot diagnostic graphs summary regression nicely formatted). caveats: function return top-level. way cat() loops -condition without without setting results='asis'. can however concatenate objects paste.knit_asis()","code":""},{"path":"http://rubenarslan.github.io/formr/reference/asis_knit_child.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"knit_child as is — asis_knit_child","text":"","code":"if (FALSE) { # \\dontrun{ # an example of a wrapper function that calls asis_knit_child with an argument # ensures distinct paths for cache and figures, so that these calls can be looped in parallel regression_summary = function(model) {    child_hash = digest::digest(model)    options = list(        fig.path = paste0(knitr::opts_chunk$get(\"fig.path\"), child_hash, \"-\"),         cache.path = paste0(knitr::opts_chunk$get(\"cache.path\"), child_hash, \"-\"))    asis_knit_child(\"_regression_summary.Rmd\", options = options) } } # }"},{"path":"http://rubenarslan.github.io/formr/reference/choice_labels_for_values.html","id":null,"dir":"Reference","previous_headings":"","what":"switch choice values with labels — choice_labels_for_values","title":"switch choice values with labels — choice_labels_for_values","text":"formr display labels multiple choice items, stores values. assume prefer analyse values (e.g. numeric values Likert-type items, English values international surveys), sometimes may wish switch around.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/choice_labels_for_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"switch choice values with labels — choice_labels_for_values","text":"","code":"choice_labels_for_values(survey, item_name)"},{"path":"http://rubenarslan.github.io/formr/reference/choice_labels_for_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"switch choice values with labels — choice_labels_for_values","text":"survey survey item_list attribute item_name item name","code":""},{"path":"http://rubenarslan.github.io/formr/reference/choice_labels_for_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"switch choice values with labels — choice_labels_for_values","text":"","code":"example(formr_post_process_results) #>  #> frm___> results = jsonlite::fromJSON(txt =  #> frm___+ \tsystem.file('extdata/BFI_post.json', package = 'formr', mustWork = TRUE)) #>  #> frm___> items = formr_items(path =  #> frm___+ \tsystem.file('extdata/BFI_post_items.json', package = 'formr', mustWork = TRUE)) #>  #> frm___> item_displays = jsonlite::fromJSON( #> frm___+ \tsystem.file('extdata/BFI_post_itemdisplay.json', package = 'formr', mustWork = TRUE)) #>  #> frm___> processed_results = formr_post_process_results(items, results, item_displays = item_displays, #> frm___+ compute_alphas = FALSE, plot_likert = FALSE) #> No test users detected. table(processed_results$BFIK_extra_4) #>  #>  1  2  3  4  5  #>  1  3  4 11  9  table(choice_labels_for_values(processed_results, \"BFIK_extra_4\")) #>  #> 1: Trifft überhaupt nicht zu                            2  #>                            1                            3  #>                            3                            4  #>                            4                           11  #>   5: Trifft voll und ganz zu  #>                            9"},{"path":"http://rubenarslan.github.io/formr/reference/crosstabs.html","id":null,"dir":"Reference","previous_headings":"","what":"xtabs with sensible defaults — crosstabs","title":"xtabs with sensible defaults — crosstabs","text":"xtabs requires two arguments (na.action exclude) show missing values along values. function defaults including missings one argument","code":""},{"path":"http://rubenarslan.github.io/formr/reference/crosstabs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xtabs with sensible defaults — crosstabs","text":"","code":"crosstabs(x, ..., exclude = NULL)"},{"path":"http://rubenarslan.github.io/formr/reference/crosstabs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xtabs with sensible defaults — crosstabs","text":"x passed xtabs formula, transformed formula single object ... passed xtabs exclude defaults NULL (.e. includes NA)","code":""},{"path":"http://rubenarslan.github.io/formr/reference/crosstabs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xtabs with sensible defaults — crosstabs","text":"","code":"x = NA crosstabs(~ x) #> x #> <NA>  #>    1"},{"path":"http://rubenarslan.github.io/formr/reference/current.html","id":null,"dir":"Reference","previous_headings":"","what":"Gives the last element, doesn't omit missings — current","title":"Gives the last element, doesn't omit missings — current","text":"Just simple shorthand get current element (formr df, last element always one current session).","code":""},{"path":"http://rubenarslan.github.io/formr/reference/current.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gives the last element, doesn't omit missings — current","text":"","code":"current(x)"},{"path":"http://rubenarslan.github.io/formr/reference/current.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gives the last element, doesn't omit missings — current","text":"x vector want current element","code":""},{"path":"http://rubenarslan.github.io/formr/reference/current.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gives the last element, doesn't omit missings — current","text":"","code":"current( c(1:10,NA) ) #> [1] NA current( 1:10 ) #> [1] 10"},{"path":"http://rubenarslan.github.io/formr/reference/email_image.html","id":null,"dir":"Reference","previous_headings":"","what":"generates valid email cids — email_image","title":"generates valid email cids — email_image","text":"can used argument knitr::opts_knit. attach images properly, can send knit emails including plots. See formr OpenCPU module Github sample implementation.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/email_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generates valid email cids — email_image","text":"","code":"email_image(x, ext = \".png\")"},{"path":"http://rubenarslan.github.io/formr/reference/email_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generates valid email cids — email_image","text":"x image ID ext extension, defaults .png","code":""},{"path":"http://rubenarslan.github.io/formr/reference/email_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generates valid email cids — email_image","text":"","code":"if (FALSE) { # \\dontrun{ library(knitr); library(formr) opts_knit$set(upload.fun=formr::email_image) } # }"},{"path":"http://rubenarslan.github.io/formr/reference/expired.html","id":null,"dir":"Reference","previous_headings":"","what":"How many surveys were expired? — expired","title":"How many surveys were expired? — expired","text":"Just simple check many times survey (e.g. diary) expired (.e. user missed ). defaults checking \"expired\" variable .","code":""},{"path":"http://rubenarslan.github.io/formr/reference/expired.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"How many surveys were expired? — expired","text":"","code":"expired(survey, variable = \"expired\")"},{"path":"http://rubenarslan.github.io/formr/reference/expired.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"How many surveys were expired? — expired","text":"survey survey asking ? variable variable filled , defaults \"ended\"","code":""},{"path":"http://rubenarslan.github.io/formr/reference/expired.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"How many surveys were expired? — expired","text":"","code":"survey = data.frame(expired = c(NA, \"2016-05-29 10:11:00\", NA)) expired(survey = survey) #> [1] 1"},{"path":"http://rubenarslan.github.io/formr/reference/feedback_chunk.html","id":null,"dir":"Reference","previous_headings":"","what":"Text feedback based on groups — feedback_chunk","title":"Text feedback based on groups — feedback_chunk","text":"pass z-standardised value (x - Mean)/SD, vector feedback text chunks, either three five elements, text chunks used order [low], low, average, high, [high] corresponding intervals [low, -2], [-2, -1], [-1, 1], [1, 2], [2, high]","code":""},{"path":"http://rubenarslan.github.io/formr/reference/feedback_chunk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Text feedback based on groups — feedback_chunk","text":"","code":"feedback_chunk(normed_value, chunks)"},{"path":"http://rubenarslan.github.io/formr/reference/feedback_chunk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Text feedback based on groups — feedback_chunk","text":"normed_value z-standardised value chunks three five element long character vector containing text chunks feedback","code":""},{"path":"http://rubenarslan.github.io/formr/reference/feedback_chunk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Text feedback based on groups — feedback_chunk","text":"","code":"feedback_chunk(normed_value = 0.7, chunks = c(\"You are rather introverted.\", \"You're approximately as extraverted as most people.\",\"You are rather extraverted.\")) #> [1] \"You're approximately as extraverted as most people.\""},{"path":"http://rubenarslan.github.io/formr/reference/finished.html","id":null,"dir":"Reference","previous_headings":"","what":"How many surveys were finished? — finished","title":"How many surveys were finished? — finished","text":"Just simple check many times survey (e.g. diary) finished. defaults checking \"ended\" variable .","code":""},{"path":"http://rubenarslan.github.io/formr/reference/finished.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"How many surveys were finished? — finished","text":"","code":"finished(survey, variable = \"ended\")"},{"path":"http://rubenarslan.github.io/formr/reference/finished.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"How many surveys were finished? — finished","text":"survey survey asking ? variable variable filled , defaults \"ended\"","code":""},{"path":"http://rubenarslan.github.io/formr/reference/finished.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"How many surveys were finished? — finished","text":"","code":"survey = data.frame(ended = c(\"2016-05-28 10:11:00\", NA, \"2016-05-30 11:18:28\")) finished(survey = survey) #> [1] 2"},{"path":"http://rubenarslan.github.io/formr/reference/first.html","id":null,"dir":"Reference","previous_headings":"","what":"Gives the first non-missing element — first","title":"Gives the first non-missing element — first","text":"Just simple shorthand get first, non-missing argument per default. Can give one element can include missing elements. inverse last().","code":""},{"path":"http://rubenarslan.github.io/formr/reference/first.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gives the first non-missing element — first","text":"","code":"first(x, n = 1, na.rm = TRUE)"},{"path":"http://rubenarslan.github.io/formr/reference/first.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gives the first non-missing element — first","text":"x vector want first element n number elements take beginning na.rm whether remove missings first, defaults TRUE","code":""},{"path":"http://rubenarslan.github.io/formr/reference/first.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gives the first non-missing element — first","text":"","code":"first( c(NA,1:10) ) #> [1] 1 first( c(NA, 1:10), 2, TRUE ) #> [1] 1 2"},{"path":"http://rubenarslan.github.io/formr/reference/formr_aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate data based on item table — formr_aggregate","title":"Aggregate data based on item table — formr_aggregate","text":"retrieved item table using formr_items() can use function aggregate multiple choice items mean scores. item table (e.g. data collected using formr, want another HTTP request time-sensitive process). Example: data contains Extraversion_1, Extraversion_2R Extraversion_3, two new variables result: Extraversion_2 (reversed align _1 _2) Extraversion, mean score three.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate data based on item table — formr_aggregate","text":"","code":"formr_aggregate(   survey_name,   item_list = formr_items(survey_name, host = host),   results = formr_raw_results(survey_name, host = host),   host = formr_last_host(),   compute_alphas = FALSE,   fallback_max = 5,   plot_likert = FALSE,   quiet = FALSE,   aggregation_function = rowMeans,   ... )"},{"path":"http://rubenarslan.github.io/formr/reference/formr_aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate data based on item table — formr_aggregate","text":"survey_name case-sensitive name survey account owns item_list item_list, auto-retrieved based survey_name omitted results survey results, auto-retrieved based survey_name omitted host defaults formr_last_host(), defaults https://formr.org compute_alphas deprecated, functionality migrated codebook package fallback_max defaults 5 - item_list set null, use reverse plot_likert deprecated, functionality migrated codebook package quiet defaults FALSE - set true, likert plots reliability computations echoed. aggregation_function defaults rowMeans na.rm = FALSE ... passed  psych::alpha()","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_aggregate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate data based on item table — formr_aggregate","text":"","code":"results = jsonlite::fromJSON(txt =    system.file('extdata/gods_example_results.json', package = 'formr', mustWork = TRUE)) items = formr_items(path =    system.file('extdata/gods_example_items.json', package = 'formr', mustWork = TRUE)) results = formr_recognise(item_list = items, results = results) agg = formr_aggregate(item_list = items, results = results,    compute_alphas = FALSE, plot_likert = FALSE) #> Warning: results[[item$name]]: There are values outside the labelled range. Reversion will only work if both the minimum and maximum of the range are part of the responses. agg[, c('religiousness', 'prefer')] #>    religiousness prefer #> 1           3.00    4.0 #> 2           1.00    1.0 #> 3           1.00    1.0 #> 4           2.50    4.0 #> 5           2.50    3.0 #> 6           3.00    3.5 #> 7           3.00    1.5 #> 8           1.50    2.5 #> 9           2.00    3.0 #> 10          3.00    4.0 #> 11          1.25    1.5 #> 12          2.50    1.5 #> 13          3.50    4.5 #> 14          3.75    4.5"},{"path":"http://rubenarslan.github.io/formr/reference/formr_api_access_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to formr API — formr_api_access_token","title":"Connect to formr API — formr_api_access_token","text":"Connects formr using client_id client_secret (OAuth 2.0 grant type: client_credentials).","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_api_access_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to formr API — formr_api_access_token","text":"","code":"formr_api_access_token(   client_id,   client_secret,   host = \"https://api.formr.org/\" )"},{"path":"http://rubenarslan.github.io/formr/reference/formr_api_access_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to formr API — formr_api_access_token","text":"client_id client_id client_secret client_secret host defaults https://formr.org","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_api_access_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to formr API — formr_api_access_token","text":"","code":"if (FALSE) { # \\dontrun{ formr_api_access_token(client_id = 'your_id', client_secret = 'your_secret' ) } # }"},{"path":"http://rubenarslan.github.io/formr/reference/formr_api_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Get result from formr — formr_api_results","title":"Get result from formr — formr_api_results","text":"obtaining token formr, use request","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_api_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get result from formr — formr_api_results","text":"","code":"formr_api_results(request = NULL, token = NULL)"},{"path":"http://rubenarslan.github.io/formr/reference/formr_api_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get result from formr — formr_api_results","text":"request parameter (see example, API docs) token defaults last used token","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_api_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get result from formr — formr_api_results","text":"","code":"if (FALSE) { # \\dontrun{ request <-    list(     \"run[name]\" = 'widgets',     \"run[sessions]\" =        'PJ_nACjFQDEBhx7pMUfZQz3mV-OtetnpEdqT88aiY8eXE4-HegFI7Sri4yifxPXO',     \"surveys[all_widgets]\" = \"abode, yourstory, mc_god\" ) formr_api_results(request) } # }"},{"path":"http://rubenarslan.github.io/formr/reference/formr_api_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Get current API session Return or set URL in list form for formr API (if available) — formr_api_session","title":"Get current API session Return or set URL in list form for formr API (if available) — formr_api_session","text":"Get current API session Return set URL list form formr API (available)","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_api_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get current API session Return or set URL in list form for formr API (if available) — formr_api_session","text":"","code":"formr_api_session()"},{"path":"http://rubenarslan.github.io/formr/reference/formr_backup_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Backup uploaded files from formr — formr_backup_files","title":"Backup uploaded files from formr — formr_backup_files","text":"connecting formr using formr_connect() can backup uploaded files using command.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_backup_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backup uploaded files from formr — formr_backup_files","text":"","code":"formr_backup_files(   survey_name,   overwrite = FALSE,   save_path = survey_name,   host = formr_last_host() )"},{"path":"http://rubenarslan.github.io/formr/reference/formr_backup_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Backup uploaded files from formr — formr_backup_files","text":"survey_name case-sensitive name survey account owns overwrite existing files overwritten? defaults FALSE save_path defaults survey name host defaults formr_last_host(), defaults https://formr.org","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_backup_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Backup uploaded files from formr — formr_backup_files","text":"","code":"if (FALSE) { # \\dontrun{ formr_backup_files(survey_name = 'training_diary' ) } # }"},{"path":"http://rubenarslan.github.io/formr/reference/formr_backup_study.html","id":null,"dir":"Reference","previous_headings":"","what":"Backup a study — formr_backup_study","title":"Backup a study — formr_backup_study","text":"Backup study downloading surveys, results, item displays, run shuffle, user overview user details. function save data folder named study.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_backup_study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backup a study — formr_backup_study","text":"","code":"formr_backup_study(   study_name,   save_path = study_name,   host = formr_last_host(),   overwrite = FALSE )"},{"path":"http://rubenarslan.github.io/formr/reference/formr_backup_study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Backup a study — formr_backup_study","text":"study_name case-sensitive name study account owns save_path path save study data, defaults study name host defaults formr_last_host(), defaults https://formr.org overwrite existing files overwritten?","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_backup_study.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Backup a study — formr_backup_study","text":"","code":"if (FALSE) { # \\dontrun{ formr_backup_study(study_name = 'training_diary' ) } # }"},{"path":"http://rubenarslan.github.io/formr/reference/formr_backup_surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"Backup surveys — formr_backup_surveys","title":"Backup surveys — formr_backup_surveys","text":"Backup surveys downloading item lists, results, item displays file lists.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_backup_surveys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backup surveys — formr_backup_surveys","text":"","code":"formr_backup_surveys(   survey_names,   surveys = list(),   save_path = \"./\",   overwrite = FALSE,   host = formr_last_host() )"},{"path":"http://rubenarslan.github.io/formr/reference/formr_backup_surveys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Backup surveys — formr_backup_surveys","text":"survey_names case-sensitive names surveys account owns surveys list survey data (run structure), optional save_path path save study data, defaults study name overwrite existing files overwritten? host defaults formr_last_host(), defaults https://formr.org","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_backup_surveys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Backup surveys — formr_backup_surveys","text":"","code":"if (FALSE) { # \\dontrun{ formr_backup_surveys(survey_names = 'training_diary', save_path = 'surveys') } # }"},{"path":"http://rubenarslan.github.io/formr/reference/formr_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to formr — formr_connect","title":"Connect to formr — formr_connect","text":"Connects formr using normal login httr library supports persistent session cookies. Calling function persist specified host (default https://formr.org) formr_ function calls. can change calling formr_last_host()","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to formr — formr_connect","text":"","code":"formr_connect(   email = NULL,   password = NULL,   host = formr_last_host(),   keyring = NULL )"},{"path":"http://rubenarslan.github.io/formr/reference/formr_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to formr — formr_connect","text":"email registered email address password password host defaults formr_last_host(), defaults https://formr.org keyring shorthand account using","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_connect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to formr — formr_connect","text":"","code":"if (FALSE) { # \\dontrun{ formr_connect(keyring = \"formr_diary_study_account\" ) } # }"},{"path":"http://rubenarslan.github.io/formr/reference/formr_disconnect.html","id":null,"dir":"Reference","previous_headings":"","what":"Disconnect from formr — formr_disconnect","title":"Disconnect from formr — formr_disconnect","text":"Disconnects formr connected.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_disconnect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disconnect from formr — formr_disconnect","text":"","code":"formr_disconnect(host = formr_last_host())"},{"path":"http://rubenarslan.github.io/formr/reference/formr_disconnect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Disconnect from formr — formr_disconnect","text":"host defaults formr_last_host(), defaults https://formr.org","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_disconnect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disconnect from formr — formr_disconnect","text":"","code":"if (FALSE) { # \\dontrun{ formr_disconnect() } # }"},{"path":"http://rubenarslan.github.io/formr/reference/formr_inline_render.html","id":null,"dir":"Reference","previous_headings":"","what":"render inline text for formr — formr_inline_render","title":"render inline text for formr — formr_inline_render","text":"Render text","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_inline_render.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"render inline text for formr — formr_inline_render","text":"","code":"formr_inline_render(text, self_contained = TRUE, ...)"},{"path":"http://rubenarslan.github.io/formr/reference/formr_inline_render.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"render inline text for formr — formr_inline_render","text":"text written tmp file used input argument self_contained passed markdown_custom_options ... arguments passed rmarkdown::render()","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_item_displays.html","id":null,"dir":"Reference","previous_headings":"","what":"Download detailed result timings and display counts from formr — formr_item_displays","title":"Download detailed result timings and display counts from formr — formr_item_displays","text":"connecting formr using formr_connect() can download detailed times display counts item using command.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_item_displays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download detailed result timings and display counts from formr — formr_item_displays","text":"","code":"formr_item_displays(survey_name, host = formr_last_host())"},{"path":"http://rubenarslan.github.io/formr/reference/formr_item_displays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download detailed result timings and display counts from formr — formr_item_displays","text":"survey_name case-sensitive name survey account owns host defaults formr_last_host(), defaults https://formr.org","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_item_displays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download detailed result timings and display counts from formr — formr_item_displays","text":"","code":"if (FALSE) { # \\dontrun{ formr_connect(email = 'you@example.net', password = 'zebrafinch' ) formr_item_displays(survey_name = 'training_diary' ) } # }"},{"path":"http://rubenarslan.github.io/formr/reference/formr_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Download items from formr — formr_items","title":"Download items from formr — formr_items","text":"connecting formr using formr_connect() can download items using command. One survey_name path specified, specified, survey_name preferred.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download items from formr — formr_items","text":"","code":"formr_items(survey_name = NULL, host = formr_last_host(), path = NULL)"},{"path":"http://rubenarslan.github.io/formr/reference/formr_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download items from formr — formr_items","text":"survey_name case-sensitive name survey account owns host defaults formr_last_host(), defaults https://formr.org path path local JSON copy item table","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_items.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download items from formr — formr_items","text":"","code":"if (FALSE) { # \\dontrun{ formr_connect(email = 'you@example.net', password = 'zebrafinch' ) formr_items(survey_name = 'training_diary' ) } # } formr_items(path =    system.file('extdata/gods_example_items.json', package = 'formr', mustWork = TRUE))[1:2] #> $gods #> $gods$type #> [1] \"mc_button\" #>  #> $gods$choice_list #> [1] \"gods\" #>  #> $gods$type_options #> [1] \"\" #>  #> $gods$name #> [1] \"gods\" #>  #> $gods$label #> [1] \"Who do you believe in the most?\" #>  #> $gods$label_parsed #> [1] \"Who do you believe in the most?\" #>  #> $gods$optional #> [1] 0 #>  #> $gods$class #> NULL #>  #> $gods$showif #> NULL #>  #> $gods$value #> NULL #>  #> $gods$block_order #> NULL #>  #> $gods$item_order #> [1] 1 #>  #> $gods$choices #> $gods$choices$glob #> [1] \"Glob\" #>  #> $gods$choices$cthulhu #> [1] \"Cthulhu\" #>  #> $gods$choices$spaghetti_monster #> [1] \"Spaghetti Monster\" #>  #>  #>  #> $religiousness_1 #> $religiousness_1$type #> [1] \"mc_button\" #>  #> $religiousness_1$choice_list #> [1] \"agreement\" #>  #> $religiousness_1$type_options #> [1] \"\" #>  #> $religiousness_1$name #> [1] \"religiousness_1\" #>  #> $religiousness_1$label #> [1] \"He touched me with his noodly appendages.\" #>  #> $religiousness_1$label_parsed #> [1] \"He touched me with his noodly appendages.\" #>  #> $religiousness_1$optional #> [1] 0 #>  #> $religiousness_1$class #> NULL #>  #> $religiousness_1$showif #> NULL #>  #> $religiousness_1$value #> NULL #>  #> $religiousness_1$block_order #> NULL #>  #> $religiousness_1$item_order #> [1] 2 #>  #> $religiousness_1$choices #> $religiousness_1$choices$`1` #> [1] \"strongly disagree\" #>  #> $religiousness_1$choices$`2` #> [1] \"somewhat disagree\" #>  #> $religiousness_1$choices$`3` #> [1] \"somewhat agree\" #>  #> $religiousness_1$choices$`4` #> [1] \"strongly agree\" #>  #>  #>"},{"path":"http://rubenarslan.github.io/formr/reference/formr_knit.html","id":null,"dir":"Reference","previous_headings":"","what":"knit rmarkdown to markdown for formr — formr_knit","title":"knit rmarkdown to markdown for formr — formr_knit","text":"Render text","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_knit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"knit rmarkdown to markdown for formr — formr_knit","text":"","code":"formr_knit(text)"},{"path":"http://rubenarslan.github.io/formr/reference/formr_knit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"knit rmarkdown to markdown for formr — formr_knit","text":"text rmarkdown knit","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_last_host.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the last specified host — formr_last_host","title":"Get the last specified host — formr_last_host","text":"function returns default last specified host called without argument. changes host called argument.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_last_host.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the last specified host — formr_last_host","text":"","code":"formr_last_host(host = NULL)"},{"path":"http://rubenarslan.github.io/formr/reference/formr_last_host.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the last specified host — formr_last_host","text":"host defaults https://formr.org","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_last_host.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the last specified host — formr_last_host","text":"last specified host","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_last_host.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the last specified host — formr_last_host","text":"","code":"formr_last_host(\"https://formr.org\") #> [1] \"https://formr.org\" formr_last_host() #> [1] \"https://formr.org\""},{"path":"http://rubenarslan.github.io/formr/reference/formr_post_process_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Processed, aggregated results — formr_post_process_results","title":"Processed, aggregated results — formr_post_process_results","text":"function chains formr_recognise() formr_aggregate() sequence. Useful want post-process raw results aggregating etc.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_post_process_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Processed, aggregated results — formr_post_process_results","text":"","code":"formr_post_process_results(   item_list = NULL,   results,   compute_alphas = FALSE,   fallback_max = 5,   plot_likert = FALSE,   quiet = FALSE,   item_displays = NULL,   tag_missings = !is.null(item_displays),   remove_test_sessions = TRUE )"},{"path":"http://rubenarslan.github.io/formr/reference/formr_post_process_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Processed, aggregated results — formr_post_process_results","text":"item_list item_list, defaults NULL results survey results compute_alphas passed formr_aggregate, defaults TRUE fallback_max passed formr_reverse, defaults 5 plot_likert passed formr_aggregate, defaults TRUE quiet passed formr_aggregate, defaults FALSE item_displays item display table, necessary tag missings tag_missings missings result item shown distinguished missings due skipped questions? remove_test_sessions default, formr removes results resulting test session (animal names null session codes)","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_post_process_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Processed, aggregated results — formr_post_process_results","text":"","code":"results = jsonlite::fromJSON(txt =    system.file('extdata/BFI_post.json', package = 'formr', mustWork = TRUE)) items = formr_items(path =    system.file('extdata/BFI_post_items.json', package = 'formr', mustWork = TRUE)) item_displays = jsonlite::fromJSON(   system.file('extdata/BFI_post_itemdisplay.json', package = 'formr', mustWork = TRUE)) processed_results = formr_post_process_results(items, results, item_displays = item_displays, compute_alphas = FALSE, plot_likert = FALSE) #> No test users detected."},{"path":"http://rubenarslan.github.io/formr/reference/formr_raw_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Download data from formr — formr_raw_results","title":"Download data from formr — formr_raw_results","text":"connecting formr using formr_connect() can download data using command.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_raw_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download data from formr — formr_raw_results","text":"","code":"formr_raw_results(survey_name, host = formr_last_host())"},{"path":"http://rubenarslan.github.io/formr/reference/formr_raw_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download data from formr — formr_raw_results","text":"survey_name case-sensitive name survey account owns host defaults formr_last_host(), defaults https://formr.org","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_raw_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download data from formr — formr_raw_results","text":"","code":"if (FALSE) { # \\dontrun{ formr_raw_results(survey_name = 'training_diary' ) } # }"},{"path":"http://rubenarslan.github.io/formr/reference/formr_recognise.html","id":null,"dir":"Reference","previous_headings":"","what":"Recognise data types based on item table — formr_recognise","title":"Recognise data types based on item table — formr_recognise","text":"retrieved item table using formr_items() can use function correctly type variables based item table (e.g. formr free text types character, select_add_one factor, dates also typed Date, datetimes POSIXct).","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_recognise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recognise data types based on item table — formr_recognise","text":"","code":"formr_recognise(   survey_name = NULL,   item_list = formr_items(survey_name, host = host),   results = formr_raw_results(survey_name, host = host),   host = formr_last_host() )"},{"path":"http://rubenarslan.github.io/formr/reference/formr_recognise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recognise data types based on item table — formr_recognise","text":"survey_name case-sensitive name survey account owns item_list item_list, auto-retrieved based survey_name omitted results survey results, auto-retrieved based survey_name omitted host defaults formr_last_host(), defaults https://formr.org","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_recognise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recognise data types based on item table — formr_recognise","text":"","code":"results = jsonlite::fromJSON(txt =  system.file('extdata/gods_example_results.json', package = 'formr', mustWork = TRUE)) class(results$created) #> [1] \"character\" items = formr_items(path =  system.file('extdata/gods_example_items.json', package = 'formr', mustWork = TRUE)) results = formr_recognise(item_list = items, results = results) class(results$created) #> [1] \"POSIXct\" \"POSIXt\""},{"path":"http://rubenarslan.github.io/formr/reference/formr_render.html","id":null,"dir":"Reference","previous_headings":"","what":"render text for formr — formr_render","title":"render text for formr — formr_render","text":"Render text","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_render.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"render text for formr — formr_render","text":"","code":"formr_render(text, self_contained = FALSE, ...)"},{"path":"http://rubenarslan.github.io/formr/reference/formr_render.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"render text for formr — formr_render","text":"text written tmp file used input argument self_contained passed markdown_custom_options ... arguments passed rmarkdown::render()","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_render_commonmark.html","id":null,"dir":"Reference","previous_headings":"","what":"render inline text for formr — formr_render_commonmark","title":"render inline text for formr — formr_render_commonmark","text":"Render text","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_render_commonmark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"render inline text for formr — formr_render_commonmark","text":"","code":"formr_render_commonmark(text)"},{"path":"http://rubenarslan.github.io/formr/reference/formr_render_commonmark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"render inline text for formr — formr_render_commonmark","text":"text passed knitr","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_render_commonmark.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"render inline text for formr — formr_render_commonmark","text":"","code":"formr_render_commonmark(\"There are only `r sample(2:3, 1)` types of people.\") #> [1] \"<p>There are only 2 types of people.<\/p>\\n\""},{"path":"http://rubenarslan.github.io/formr/reference/formr_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Download processed, aggregated results from formr — formr_results","title":"Download processed, aggregated results from formr — formr_results","text":"connecting formr using formr_connect() can download data process . approach calls following functions right sequence: formr_raw_results() formr_items(), formr_item_displays() formr_post_process_results(). , results downloaded, metadata items (labels etc.) added, normal missing values labelled. end, items like bfi_extra_3R reversed place (maintaining labels changing underlying numbers), scales aggregated (bfi_extra_1, bfi_extra_2, bfi_extra_3R become bfi_extra)","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download processed, aggregated results from formr — formr_results","text":"","code":"formr_results(survey_name, host = formr_last_host(), ...)"},{"path":"http://rubenarslan.github.io/formr/reference/formr_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download processed, aggregated results from formr — formr_results","text":"survey_name case-sensitive name survey account owns host defaults formr_last_host(), defaults https://formr.org ... passed formr_post_process_results()","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download processed, aggregated results from formr — formr_results","text":"","code":"if (FALSE) { # \\dontrun{ formr_results(survey_name = 'training_diary' ) } # }"},{"path":"http://rubenarslan.github.io/formr/reference/formr_reverse.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse items based on item table or a fallback_max — formr_reverse","title":"Reverse items based on item table or a fallback_max — formr_reverse","text":"Example: data contains Extraversion_1, Extraversion_2R Extraversion_3, two new variables result: Extraversion_2 (reversed align _1 _2) Extraversion, mean score three. supply item table, maximum possible answer item used reverse . , maximum actually given answer fallback_max argument used reverse . faster without item table, can lead problems, mis-specify fallback max highest possible value occur data.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_reverse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse items based on item table or a fallback_max — formr_reverse","text":"","code":"formr_reverse(results, item_list = NULL, fallback_max = 5)"},{"path":"http://rubenarslan.github.io/formr/reference/formr_reverse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse items based on item table or a fallback_max — formr_reverse","text":"results survey results item_list item_list, defaults NULL fallback_max defaults 5 - item_list set null, use reverse","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_reverse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse items based on item table or a fallback_max — formr_reverse","text":"","code":"if (FALSE) { # \\dontrun{ formr_connect(email = 'you@example.net', password = 'zebrafinch' ) icar_items = formr_items(survey_name='ICAR',host = 'http://localhost:8888/formr/') # get some simulated data and aggregate it sim_results = formr_simulate_from_items(icar_items) reversed_items = formr_reverse(item_list = icar_items, results = sim_results) } # } results = jsonlite::fromJSON(txt =    system.file('extdata/gods_example_results.json', package = 'formr', mustWork = TRUE)) items = formr_items(path =    system.file('extdata/gods_example_items.json', package = 'formr', mustWork = TRUE)) formr_reverse(results, items) #> Warning: religiousness_2R is not of type labelled and cannot be reversed #>    session             created            modified               ended #> 1        1 2016-02-29 10:47:54 2016-02-29 10:48:06 2016-02-29 10:48:06 #> 2        2 2016-02-29 10:48:08 2016-02-29 10:48:11 2016-02-29 10:48:11 #> 3        3 2016-02-29 10:48:13 2016-02-29 10:48:16 2016-02-29 10:48:16 #> 4        4 2016-02-29 10:48:18 2016-02-29 10:48:24 2016-02-29 10:48:24 #> 5        5 2016-02-29 10:48:26 2016-02-29 10:48:36 2016-02-29 10:48:36 #> 6        6 2016-02-29 10:48:38 2016-02-29 10:48:44 2016-02-29 10:48:44 #> 7        7 2016-02-29 10:48:45 2016-02-29 10:48:54 2016-02-29 10:48:54 #> 8        8 2016-02-29 10:48:57 2016-02-29 10:49:03 2016-02-29 10:49:03 #> 9        8 2016-02-29 10:49:05 2016-02-29 10:49:11 2016-02-29 10:49:11 #> 10       9 2016-02-29 10:49:13 2016-02-29 10:49:18 2016-02-29 10:49:18 #> 11      10 2016-02-29 10:49:20 2016-02-29 10:49:27 2016-02-29 10:49:27 #> 12      11 2016-02-29 10:49:29 2016-02-29 10:49:35 2016-02-29 10:49:35 #> 13      12 2016-02-29 10:49:37 2016-02-29 10:49:44 2016-02-29 10:49:44 #> 14      13 2016-02-29 10:49:45 2016-02-29 10:49:52 2016-02-29 10:49:52 #>                 gods religiousness_1 religiousness_2R religiousness_3 #> 1            cthulhu               4                3               2 #> 2               glob               1                5               1 #> 3               glob               1                5               1 #> 4  spaghetti_monster               3                4               3 #> 5            cthulhu               4                3               2 #> 6               glob               2                3               4 #> 7            cthulhu               1                2               3 #> 8               glob               2                5               2 #> 9            cthulhu               2                4               2 #> 10 spaghetti_monster               3                3               3 #> 11              glob               1                5               1 #> 12           cthulhu               2                1               2 #> 13 spaghetti_monster               3                2               3 #> 14           cthulhu               3                1               3 #>    religiousness_4 prefer_1 prefer_2 #> 1                3        4        4 #> 2                1        1        1 #> 3                1        1        1 #> 4                2        4        4 #> 5                1        5        1 #> 6                3        4        3 #> 7                4        1        2 #> 8                1        3        2 #> 9                2        3        3 #> 10               3        4        4 #> 11               2        1        2 #> 12               1        2        1 #> 13               4        5        4 #> 14               4        4        5"},{"path":"http://rubenarslan.github.io/formr/reference/formr_run_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Download run structure from formr — formr_run_structure","title":"Download run structure from formr — formr_run_structure","text":"connecting formr using formr_connect() can download study/run structure using command.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_run_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download run structure from formr — formr_run_structure","text":"","code":"formr_run_structure(run_name, host = formr_last_host())"},{"path":"http://rubenarslan.github.io/formr/reference/formr_run_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download run structure from formr — formr_run_structure","text":"run_name case-sensitive name run account owns host defaults formr_last_host(), defaults https://formr.org","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_run_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download run structure from formr — formr_run_structure","text":"","code":"if (FALSE) { # \\dontrun{ formr_run_structure(run_name = 'training_diary' ) } # }"},{"path":"http://rubenarslan.github.io/formr/reference/formr_shuffled.html","id":null,"dir":"Reference","previous_headings":"","what":"Download random groups — formr_shuffled","title":"Download random groups — formr_shuffled","text":"formr specific module randomisation. connecting using formr_connect() can download assigned random groups merge data.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_shuffled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download random groups — formr_shuffled","text":"","code":"formr_shuffled(run_name, host = formr_last_host())"},{"path":"http://rubenarslan.github.io/formr/reference/formr_shuffled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download random groups — formr_shuffled","text":"run_name case-sensitive name run randomised participants host defaults formr_last_host(), defaults https://formr.org","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_shuffled.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download random groups — formr_shuffled","text":"","code":"if (FALSE) { # \\dontrun{ formr_connect(email = 'you@example.net', password = 'zebrafinch' ) formr_shuffled(run_name = 'different_drills' ) } # }"},{"path":"http://rubenarslan.github.io/formr/reference/formr_simulate_from_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data based on item table — formr_simulate_from_items","title":"Simulate data based on item table — formr_simulate_from_items","text":"retrieved item table using formr_items() can use function sample data possible choices. moment random data generated choice-type items numeric ones, likely enter data analysis. yet handle dates, times, text, locations, colors","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_simulate_from_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data based on item table — formr_simulate_from_items","text":"","code":"formr_simulate_from_items(item_list, n = 300)"},{"path":"http://rubenarslan.github.io/formr/reference/formr_simulate_from_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data based on item table — formr_simulate_from_items","text":"item_list result call formr_connect() n defaults 300","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_simulate_from_items.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate data based on item table — formr_simulate_from_items","text":"","code":"if (FALSE) { # \\dontrun{ formr_connect(email = 'you@example.net', password = 'zebrafinch' ) sim = formr_simulate_from_items(item_list = formr_items('training_diary'), n = 100) summary(lm(pushups ~ pullups, data = sim)) } # } items = formr_items(path =  system.file('extdata/gods_example_items.json', package = 'formr', mustWork = TRUE)) fakedata = formr_simulate_from_items(items, n = 20) fakedata[1:2,] #>   id             created               ended            modified #> 1  1 2024-09-30 12:24:35 2024-09-30 12:26:46 2024-09-30 12:26:46 #> 2  2 2024-10-08 20:28:26 2024-10-08 20:31:05 2024-10-08 20:31:05 #>                gods religiousness_1 religiousness_2R religiousness_3 #> 1 spaghetti_monster               4                1               3 #> 2 spaghetti_monster               1                3               3 #>   religiousness_4 prefer_1 prefer_2 #> 1               1        3        5 #> 2               2        2        4"},{"path":"http://rubenarslan.github.io/formr/reference/formr_store_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Store keys in keyring — formr_store_keys","title":"Store keys in keyring — formr_store_keys","text":"Store keys system keyring/keychain instead plaintext.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_store_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store keys in keyring — formr_store_keys","text":"","code":"formr_store_keys(account_name, email = NULL, secret_2fa = NULL)"},{"path":"http://rubenarslan.github.io/formr/reference/formr_store_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store keys in keyring — formr_store_keys","text":"account_name shorthand account using email email address account, prompted omitted secret_2fa 2FA secret, optional, set NULL want prompted logging , set \"\" 2FA","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_store_keys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Store keys in keyring — formr_store_keys","text":"","code":"if (FALSE) { # \\dontrun{ formr_store_keys(\"formr_diary_study_account\") } # }"},{"path":"http://rubenarslan.github.io/formr/reference/formr_upload_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload new item table — formr_upload_items","title":"Upload new item table — formr_upload_items","text":"automatically create surveys using formr, can upload survey item tables R. file uploads available. file name determines survey name. Updating existing surveys implemented recommended (sanity checks require prevent data deletion).","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_upload_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload new item table — formr_upload_items","text":"","code":"formr_upload_items(survey_file_path, host = formr_last_host())"},{"path":"http://rubenarslan.github.io/formr/reference/formr_upload_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload new item table — formr_upload_items","text":"survey_file_path path item table csv/json/xlsx etc. host defaults formr_last_host(), defaults https://formr.org","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_upload_items.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload new item table — formr_upload_items","text":"","code":"if (FALSE) { # \\dontrun{ formr_connect(email = 'you@example.net', password = 'zebrafinch' ) items <- system.file('extdata/gods_example_items.json', package = 'formr',  mustWork = TRUE) formr_upload_items(items) } # }"},{"path":"http://rubenarslan.github.io/formr/reference/formr_uploaded_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Download uploaded files from formr — formr_uploaded_files","title":"Download uploaded files from formr — formr_uploaded_files","text":"connecting formr using formr_connect() can download uploaded files using command.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_uploaded_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download uploaded files from formr — formr_uploaded_files","text":"","code":"formr_uploaded_files(survey_name, host = formr_last_host())"},{"path":"http://rubenarslan.github.io/formr/reference/formr_uploaded_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download uploaded files from formr — formr_uploaded_files","text":"survey_name case-sensitive name survey account owns host defaults formr_last_host(), defaults https://formr.org","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_uploaded_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download uploaded files from formr — formr_uploaded_files","text":"","code":"if (FALSE) { # \\dontrun{ formr_uploaded_files(survey_name = 'training_diary' ) } # }"},{"path":"http://rubenarslan.github.io/formr/reference/formr_user_detail.html","id":null,"dir":"Reference","previous_headings":"","what":"Download random groups — formr_user_detail","title":"Download random groups — formr_user_detail","text":"formr collects information users' progression run connecting using formr_connect() can download table showing progression run.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_user_detail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download random groups — formr_user_detail","text":"","code":"formr_user_detail(run_name, host = formr_last_host())"},{"path":"http://rubenarslan.github.io/formr/reference/formr_user_detail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download random groups — formr_user_detail","text":"run_name case-sensitive name run randomised participants host defaults formr_last_host(), defaults https://formr.org","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_user_detail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download random groups — formr_user_detail","text":"","code":"if (FALSE) { # \\dontrun{ formr_connect(email = 'you@example.net', password = 'zebrafinch' ) formr_user_detail(run_name = 'different_drills' ) } # }"},{"path":"http://rubenarslan.github.io/formr/reference/formr_user_overview.html","id":null,"dir":"Reference","previous_headings":"","what":"Download random groups — formr_user_overview","title":"Download random groups — formr_user_overview","text":"formr collects information users' progression run connecting using formr_connect() can download table showing run.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_user_overview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download random groups — formr_user_overview","text":"","code":"formr_user_overview(run_name, host = formr_last_host())"},{"path":"http://rubenarslan.github.io/formr/reference/formr_user_overview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download random groups — formr_user_overview","text":"run_name case-sensitive name run randomised participants host defaults formr_last_host(), defaults https://formr.org","code":""},{"path":"http://rubenarslan.github.io/formr/reference/formr_user_overview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download random groups — formr_user_overview","text":"","code":"if (FALSE) { # \\dontrun{ formr_connect(email = 'you@example.net', password = 'zebrafinch' ) formr_user_overview(run_name = 'different_drills' ) } # }"},{"path":"http://rubenarslan.github.io/formr/reference/get_opencpu_rds.html","id":null,"dir":"Reference","previous_headings":"","what":"pass in the url to the RDS representation of a openCPU session object, get the object — get_opencpu_rds","title":"pass in the url to the RDS representation of a openCPU session object, get the object — get_opencpu_rds","text":"useful programmatically access openCPU session object stored character variables etc.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/get_opencpu_rds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pass in the url to the RDS representation of a openCPU session object, get the object — get_opencpu_rds","text":"","code":"get_opencpu_rds(session_url, local = TRUE)"},{"path":"http://rubenarslan.github.io/formr/reference/get_opencpu_rds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pass in the url to the RDS representation of a openCPU session object, get the object — get_opencpu_rds","text":"session_url session url, e.g. https://public.opencpu.org/ocpu/tmp/x02a93ec/R/.val/rds local defaults FALSE, true, assume session another server, --smart substitution load via file system instead HTTP/HTTPS","code":""},{"path":"http://rubenarslan.github.io/formr/reference/get_opencpu_rds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"pass in the url to the RDS representation of a openCPU session object, get the object — get_opencpu_rds","text":"","code":"if (FALSE) { # \\dontrun{ get_opencpu_rds('https://public.opencpu.org/ocpu/tmp/x02a93ec/R/.val/rds') } # }"},{"path":"http://rubenarslan.github.io/formr/reference/grapes-begins_with-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"check whether a character string begins with a string — %begins_with%","title":"check whether a character string begins with a string — %begins_with%","text":"Escapes special RegExp characters search term. way check whether search term (e.g. variable name) beginning. Just simple shorthand inexperienced R users use somewhat complex functions grepl() stringr::str_detect(). can also use \\%starts_with\\%.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/grapes-begins_with-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check whether a character string begins with a string — %begins_with%","text":"","code":"haystack %begins_with% needle"},{"path":"http://rubenarslan.github.io/formr/reference/grapes-begins_with-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check whether a character string begins with a string — %begins_with%","text":"haystack string search needle string search ","code":""},{"path":"http://rubenarslan.github.io/formr/reference/grapes-begins_with-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check whether a character string begins with a string — %begins_with%","text":"","code":"\"1, 3, 4\" %begins_with% \"1\" # TRUE #> [1] TRUE \"1, 3, 4\" %begins_with% 1 # unlike str_detect casts all needles as characters #> [1] TRUE \"1, 3, 4\" %begins_with% \".\" # FALSE #> [1] FALSE"},{"path":"http://rubenarslan.github.io/formr/reference/grapes-contains-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"check whether a character string contains another — %contains%","title":"check whether a character string contains another — %contains%","text":"Just simple shorthand inexperienced R users use somewhat complex functions grepl() stringr::str_detect() non-default arguments (e.g. fixed params).","code":""},{"path":"http://rubenarslan.github.io/formr/reference/grapes-contains-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check whether a character string contains another — %contains%","text":"","code":"haystack %contains% needle"},{"path":"http://rubenarslan.github.io/formr/reference/grapes-contains-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check whether a character string contains another — %contains%","text":"haystack string search needle string search ","code":""},{"path":"http://rubenarslan.github.io/formr/reference/grapes-contains-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check whether a character string contains another — %contains%","text":"","code":"\"1, 2, 3, 4, you\" %contains% \"you\" #> [1] TRUE \"1, 2, 3, 4, you\" %contains% 1 # unlike str_detect casts all needles as characters #> [1] TRUE \"1, 2, 3, 4, you\" %contains% 343 #> [1] FALSE"},{"path":"http://rubenarslan.github.io/formr/reference/grapes-contains_word-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"check whether a character string contains another as a word — %contains_word%","title":"check whether a character string contains another as a word — %contains_word%","text":"Looks string appearing . needed e.g. checking whether replies mmc item, stored comma-separated list 1 12 contain option 1 - want get hit 11 12. works search terms containing alphanumeric characters. Just simple shorthand inexperienced R users use somewhat complex functions grepl() stringr::str_detect().","code":""},{"path":"http://rubenarslan.github.io/formr/reference/grapes-contains_word-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check whether a character string contains another as a word — %contains_word%","text":"","code":"haystack %contains_word% needle"},{"path":"http://rubenarslan.github.io/formr/reference/grapes-contains_word-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check whether a character string contains another as a word — %contains_word%","text":"haystack string search needle string search ","code":""},{"path":"http://rubenarslan.github.io/formr/reference/grapes-contains_word-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check whether a character string contains another as a word — %contains_word%","text":"","code":"\"1, 3, 4\" %contains_word% \"1\" # TRUE #> [1] TRUE \"1, 3, 4\" %contains_word% 1 # TRUE unlike str_detect casts all needles as characters #> [1] TRUE \"12, 14, 17\" %contains_word% \"1\" # FALSE even though 12 contains 1 #> [1] FALSE"},{"path":"http://rubenarslan.github.io/formr/reference/grapes-ends_with-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"check whether a character string ends with a string — %ends_with%","title":"check whether a character string ends with a string — %ends_with%","text":"Escapes special RegExp characters search term. way check whether search term (e.g. variable name) ending. Just simple shorthand inexperienced R users use somewhat complex functions grepl() stringr::str_detect().","code":""},{"path":"http://rubenarslan.github.io/formr/reference/grapes-ends_with-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check whether a character string ends with a string — %ends_with%","text":"","code":"haystack %ends_with% needle"},{"path":"http://rubenarslan.github.io/formr/reference/grapes-ends_with-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check whether a character string ends with a string — %ends_with%","text":"haystack string search needle string search ","code":""},{"path":"http://rubenarslan.github.io/formr/reference/grapes-ends_with-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check whether a character string ends with a string — %ends_with%","text":"","code":"\"1, 3, 4\" %ends_with% \"4\" # TRUE #> [1] TRUE \"1, 3, 4\" %ends_with% 4 # unlike str_detect casts all needles as characters #> [1] TRUE \"1, 3, 4\" %ends_with% \".\" # FALSE #> [1] FALSE"},{"path":"http://rubenarslan.github.io/formr/reference/if_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace NA values with something else — if_na","title":"Replace NA values with something else — if_na","text":"Often, want substitute missing values implicit known value (e.g. question number sexual partners skipped sexually inactive people, know missing turn zero)","code":""},{"path":"http://rubenarslan.github.io/formr/reference/if_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace NA values with something else — if_na","text":"","code":"if_na(x, missing)"},{"path":"http://rubenarslan.github.io/formr/reference/if_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace NA values with something else — if_na","text":"x variable missing replace missing values ","code":""},{"path":"http://rubenarslan.github.io/formr/reference/if_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace NA values with something else — if_na","text":"","code":"number_of_sex_partners <- c(1, 3, 5, 10, NA, 29) if_na(number_of_sex_partners, 0) #> [1]  1  3  5 10  0 29"},{"path":"http://rubenarslan.github.io/formr/reference/if_na_null.html","id":null,"dir":"Reference","previous_headings":"","what":"This function makes sure you know what to expect when evaluating uncertain results in an if-clause. In most cases, you should not use this function, because it can lump a lot of very different cases together, but it may have some use for fool-proofing certain if-clauses on formr.org, where a field in a survey may either not exist, be missing or have a value to check. — if_na_null","title":"This function makes sure you know what to expect when evaluating uncertain results in an if-clause. In most cases, you should not use this function, because it can lump a lot of very different cases together, but it may have some use for fool-proofing certain if-clauses on formr.org, where a field in a survey may either not exist, be missing or have a value to check. — if_na_null","text":"function makes sure know expect evaluating uncertain results -clause. cases, use function, can lump lot different cases together, may use fool-proofing certain -clauses formr.org, field survey may either exist, missing value check.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/if_na_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function makes sure you know what to expect when evaluating uncertain results in an if-clause. In most cases, you should not use this function, because it can lump a lot of very different cases together, but it may have some use for fool-proofing certain if-clauses on formr.org, where a field in a survey may either not exist, be missing or have a value to check. — if_na_null","text":"","code":"if_na_null(test, na = FALSE, null = FALSE)"},{"path":"http://rubenarslan.github.io/formr/reference/if_na_null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function makes sure you know what to expect when evaluating uncertain results in an if-clause. In most cases, you should not use this function, because it can lump a lot of very different cases together, but it may have some use for fool-proofing certain if-clauses on formr.org, where a field in a survey may either not exist, be missing or have a value to check. — if_na_null","text":"test condition. can length 0 length 1 na returned condition missing value null passed ifelse","code":""},{"path":"http://rubenarslan.github.io/formr/reference/if_na_null.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function makes sure you know what to expect when evaluating uncertain results in an if-clause. In most cases, you should not use this function, because it can lump a lot of very different cases together, but it may have some use for fool-proofing certain if-clauses on formr.org, where a field in a survey may either not exist, be missing or have a value to check. — if_na_null","text":"","code":"testdf = data.frame(test1 = 1, test2 = NA) if ( if_na_null(testdf$test1 == 1) ) { print(\"go on\") } #> [1] \"go on\" if ( if_na_null(testdf$test2 == 1) ) { print(\"not shown\") } if ( if_na_null(testdf$test3 == 1) ) { print(\"not shown\") } tryCatch({ if ( if_na_null(testdf2$test1 == 1) ) { print(\"causes error\") } },     error = function(e) { warning(e) })  #> Error: object 'testdf2' not found"},{"path":"http://rubenarslan.github.io/formr/reference/ifelsena.html","id":null,"dir":"Reference","previous_headings":"","what":"Like ifelse(), but allows you to assign a third value to missings. — ifelsena","title":"Like ifelse(), but allows you to assign a third value to missings. — ifelsena","text":"Deprecated. Please use dplyr::if_else() future. Defaults assigning \"\" value missing values well. Often missings encapsulate sort meaning variable trying define.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/ifelsena.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Like ifelse(), but allows you to assign a third value to missings. — ifelsena","text":"","code":"ifelsena(test, yes, no, missing = no)"},{"path":"http://rubenarslan.github.io/formr/reference/ifelsena.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Like ifelse(), but allows you to assign a third value to missings. — ifelsena","text":"test passed ifelse yes passed ifelse passed ifelse missing defaults value ","code":""},{"path":"http://rubenarslan.github.io/formr/reference/ifelsena.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Like ifelse(), but allows you to assign a third value to missings. — ifelsena","text":"","code":"if (FALSE) { # \\dontrun{ data(beavers) beaver1$activ[1:10] = NA beaver1$hyperactive = ifelse(beaver1$activ > 1, 1, 0) table(beaver1$hyperactive) beaver1$hyperactive = ifelsena(beaver1$activ > 1, 1, 0) table(beaver1$hyperactive) } # }"},{"path":"http://rubenarslan.github.io/formr/reference/in_time_window.html","id":null,"dir":"Reference","previous_headings":"","what":"checks whether the current time is in a certain time window — in_time_window","title":"checks whether the current time is in a certain time window — in_time_window","text":"supply min,max POSIXct","code":""},{"path":"http://rubenarslan.github.io/formr/reference/in_time_window.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"checks whether the current time is in a certain time window — in_time_window","text":"","code":"in_time_window(min, max)"},{"path":"http://rubenarslan.github.io/formr/reference/in_time_window.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"checks whether the current time is in a certain time window — in_time_window","text":"min POSIXct < max max POSIXct > min","code":""},{"path":"http://rubenarslan.github.io/formr/reference/in_time_window.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"checks whether the current time is in a certain time window — in_time_window","text":"","code":"in_time_window(Sys.time() - 1, Sys.time() + 1) #> [1] TRUE"},{"path":"http://rubenarslan.github.io/formr/reference/item.html","id":null,"dir":"Reference","previous_headings":"","what":"get item from survey attribute — item","title":"get item from survey attribute — item","text":"Shortcut attributes(survey$item_name)$item. Fails warning.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get item from survey attribute — item","text":"","code":"item(survey, item_name)"},{"path":"http://rubenarslan.github.io/formr/reference/item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get item from survey attribute — item","text":"survey survey item_list attribute item_name item name","code":""},{"path":"http://rubenarslan.github.io/formr/reference/item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get item from survey attribute — item","text":"","code":"example(formr_post_process_results) #>  #> frm___> results = jsonlite::fromJSON(txt =  #> frm___+ \tsystem.file('extdata/BFI_post.json', package = 'formr', mustWork = TRUE)) #>  #> frm___> items = formr_items(path =  #> frm___+ \tsystem.file('extdata/BFI_post_items.json', package = 'formr', mustWork = TRUE)) #>  #> frm___> item_displays = jsonlite::fromJSON( #> frm___+ \tsystem.file('extdata/BFI_post_itemdisplay.json', package = 'formr', mustWork = TRUE)) #>  #> frm___> processed_results = formr_post_process_results(items, results, item_displays = item_displays, #> frm___+ compute_alphas = FALSE, plot_likert = FALSE) #> No test users detected. item(processed_results, \"BFIK_extra_4\") #> $type #> [1] \"rating_button\" #>  #> $choice_list #> [1] \"BFIK_extra_4\" #>  #> $type_options #> [1] \"5\" #>  #> $name #> [1] \"BFIK_extra_4\" #>  #> $label #> [1] \"__Ich gehe aus mir heraus, bin gesellig.__\" #>  #> $label_parsed #> [1] \"<strong>Ich gehe aus mir heraus, bin gesellig.<\/strong>\" #>  #> $optional #> [1] 0 #>  #> $class #> NULL #>  #> $showif #> NULL #>  #> $value #> NULL #>  #> $block_order #> NULL #>  #> $item_order #> [1] 20 #>  #> $choices #> $choices$`1` #> [1] \"1: Trifft überhaupt nicht zu\" #>  #> $choices$`2` #> [1] \"2\" #>  #> $choices$`3` #> [1] \"3\" #>  #> $choices$`4` #> [1] \"4\" #>  #> $choices$`5` #> [1] \"5: Trifft voll und ganz zu\" #>  #>"},{"path":"http://rubenarslan.github.io/formr/reference/items.html","id":null,"dir":"Reference","previous_headings":"","what":"get item list from survey attributes — items","title":"get item list from survey attributes — items","text":"get item list survey attributes","code":""},{"path":"http://rubenarslan.github.io/formr/reference/items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get item list from survey attributes — items","text":"","code":"items(survey)"},{"path":"http://rubenarslan.github.io/formr/reference/items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get item list from survey attributes — items","text":"survey survey item_list attribute","code":""},{"path":"http://rubenarslan.github.io/formr/reference/items.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get item list from survey attributes — items","text":"","code":"example(formr_post_process_results) #>  #> frm___> results = jsonlite::fromJSON(txt =  #> frm___+ \tsystem.file('extdata/BFI_post.json', package = 'formr', mustWork = TRUE)) #>  #> frm___> items = formr_items(path =  #> frm___+ \tsystem.file('extdata/BFI_post_items.json', package = 'formr', mustWork = TRUE)) #>  #> frm___> item_displays = jsonlite::fromJSON( #> frm___+ \tsystem.file('extdata/BFI_post_itemdisplay.json', package = 'formr', mustWork = TRUE)) #>  #> frm___> processed_results = formr_post_process_results(items, results, item_displays = item_displays, #> frm___+ compute_alphas = FALSE, plot_likert = FALSE) #> No test users detected. items(processed_results)[[1]] #> $type #> [1] \"rating_button\" #>  #> $choice_list #> [1] \"BFIK_open_2\" #>  #> $type_options #> [1] \"5\" #>  #> $name #> [1] \"BFIK_open_2\" #>  #> $label #> [1] \"__Ich bin tiefsinnig, denke gerne über Sachen nach.__\" #>  #> $label_parsed #> [1] \"<strong>Ich bin tiefsinnig, denke gerne über Sachen nach.<\/strong>\" #>  #> $optional #> [1] 0 #>  #> $class #> NULL #>  #> $showif #> NULL #>  #> $value #> NULL #>  #> $block_order #> NULL #>  #> $item_order #> [1] 4 #>  #> $choices #> $choices$`1` #> [1] \"1: Trifft überhaupt nicht zu\" #>  #> $choices$`2` #> [1] \"2\" #>  #> $choices$`3` #> [1] \"3\" #>  #> $choices$`4` #> [1] \"4\" #>  #> $choices$`5` #> [1] \"5: Trifft voll und ganz zu\" #>  #>"},{"path":"http://rubenarslan.github.io/formr/reference/knit_prefixed.html","id":null,"dir":"Reference","previous_headings":"","what":"knit prefixed — knit_prefixed","title":"knit prefixed — knit_prefixed","text":"Knit using knitr, prefix file name figure cache folder (knit parallel e.g. cluster)","code":""},{"path":"http://rubenarslan.github.io/formr/reference/knit_prefixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"knit prefixed — knit_prefixed","text":"","code":"knit_prefixed(input, ...)"},{"path":"http://rubenarslan.github.io/formr/reference/knit_prefixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"knit prefixed — knit_prefixed","text":"input input document ... arguments passed knitr::knit()","code":""},{"path":"http://rubenarslan.github.io/formr/reference/last.html","id":null,"dir":"Reference","previous_headings":"","what":"Gives the last non-missing element — last","title":"Gives the last non-missing element — last","text":"Just simple shorthand get last, non-missing argument per default. Can give one element can include missing elements. inverse first().","code":""},{"path":"http://rubenarslan.github.io/formr/reference/last.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gives the last non-missing element — last","text":"","code":"last(x, n = 1, na.rm = TRUE)"},{"path":"http://rubenarslan.github.io/formr/reference/last.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gives the last non-missing element — last","text":"x vector want last element n number elements take end na.rm whether remove missings first, defaults TRUE","code":""},{"path":"http://rubenarslan.github.io/formr/reference/last.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gives the last non-missing element — last","text":"","code":"last( c(1:10,NA) ) #> [1] 10 last( c(1:10,NA), 2, TRUE ) #> [1]  9 10"},{"path":"http://rubenarslan.github.io/formr/reference/loadRDS.html","id":null,"dir":"Reference","previous_headings":"","what":"loads an RDS object, assigns it to an object of the base-filename — loadRDS","title":"loads an RDS object, assigns it to an object of the base-filename — loadRDS","text":"saveRDS() saves object file, unlike save() load() can assign loaded object new variable using readRDS(). However, sometimes may convenient assign object RDS file object name file. loadRDS() . extracts filename using basename() tools::file_path_sans_ext()","code":""},{"path":"http://rubenarslan.github.io/formr/reference/loadRDS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"loads an RDS object, assigns it to an object of the base-filename — loadRDS","text":"","code":"loadRDS(file, refhook = NULL, overwrite = FALSE)"},{"path":"http://rubenarslan.github.io/formr/reference/loadRDS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"loads an RDS object, assigns it to an object of the base-filename — loadRDS","text":"file path file refhook passed readRDS overwrite whether overwrite existing object name. defaults false.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/loadRDS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"loads an RDS object, assigns it to an object of the base-filename — loadRDS","text":"","code":"if (FALSE) { # \\dontrun{ loadRDS(file = '~/Models/Spouses.rds') # assigns object contained in file to variable 'Spouses' } # }"},{"path":"http://rubenarslan.github.io/formr/reference/ls_by_class.html","id":null,"dir":"Reference","previous_headings":"","what":"get functions in the environment by their class. Useful to find e.g. all regression models you've stored in interactive programming. — ls_by_class","title":"get functions in the environment by their class. Useful to find e.g. all regression models you've stored in interactive programming. — ls_by_class","text":"get functions environment class. Useful find e.g. regression models stored interactive programming.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/ls_by_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get functions in the environment by their class. Useful to find e.g. all regression models you've stored in interactive programming. — ls_by_class","text":"","code":"ls_by_class(classes, envir = parent.frame(), top_class_only = FALSE, ...)"},{"path":"http://rubenarslan.github.io/formr/reference/ls_by_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get functions in the environment by their class. Useful to find e.g. all regression models you've stored in interactive programming. — ls_by_class","text":"classes objects one classes envir defaults looking calling environment function, passed ls top_class_only defaults FALSE. false, also returns objects inheriting one specified classes. ... passed ls","code":""},{"path":"http://rubenarslan.github.io/formr/reference/ls_by_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get functions in the environment by their class. Useful to find e.g. all regression models you've stored in interactive programming. — ls_by_class","text":"","code":"data(ChickWeight) chickweight.m1 <- glm(weight ~ Time + Diet, family = gaussian, data = ChickWeight) ls_by_class('lm') #> NULL c('chickweight.m1') %in% ls_by_class('lm') #> [1] FALSE c('chickweight.m1') %in% ls_by_class('lm', top_class_only = TRUE) #> [1] FALSE"},{"path":"http://rubenarslan.github.io/formr/reference/markdown_custom_options.html","id":null,"dir":"Reference","previous_headings":"","what":"custom markdown options for rmarkdown's pandoc — markdown_custom_options","title":"custom markdown options for rmarkdown's pandoc — markdown_custom_options","text":"custom markdown options rmarkdown's pandoc","code":""},{"path":"http://rubenarslan.github.io/formr/reference/markdown_custom_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"custom markdown options for rmarkdown's pandoc — markdown_custom_options","text":"","code":"markdown_custom_options(   add_to_format = c(\"+autolink_bare_uris\", \"+ascii_identifiers\",     \"+tex_math_single_backslash\", \"-implicit_figures\"),   fragment.only = FALSE,   section_divs = TRUE,   break_on_error = FALSE,   ... )"},{"path":"http://rubenarslan.github.io/formr/reference/markdown_custom_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"custom markdown options for rmarkdown's pandoc — markdown_custom_options","text":"add_to_format add arguments default specification fragment.whether get html fragment section_divs whether disable –section-divs (headings generate section including everything next --higher-level heading) break_on_error error R code execution interrupt rendering rendering continue, defaults FALSE ... arguments passed rmarkdown::html_document() Custom rmarkdown input format options based standard rmarkdown::html_document(), options can specify. Find format options pandoc documentation: http://johnmacfarlane.net/pandoc/demo/example9/pandocs-markdown.html Pandoc's enhanced version markdown includes syntax footnotes, tables, flexible ordered lists, definition lists, fenced code blocks, superscript, subscript, strikeout, title blocks, automatic tables contents, embedded LaTeX math, citations, markdown inside HTML block elements spoken options: +escaped_line_breaks, +header_attributes, +yaml_metadata_block, +auto_identifiers, +implicit_header_references, +blank_before_blockquote, +fenced_code_blocks, +fenced_code_attributes, +line_blocks, +definition_lists, +startnum, +fancy_lists, +pipe_tables, +pandoc_title_block, +intraword_underscores, +strikeout, +superscript, +subscript, +tex_math_dollars, +raw_html, +markdown_in_html_blocks, +implicit_figures, +footnotes, +inline_notes, +citations. current default rmarkdown additions Pandoc's enhanced markdown : +autolink_bare_uris, +ascii_identifiers, +tex_math_single_backslash, -implicit_figures.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/markdown_github.html","id":null,"dir":"Reference","previous_headings":"","what":"github_markdown for rmarkdown — markdown_github","title":"github_markdown for rmarkdown — markdown_github","text":"Custom template github-flavoured markdown based standard rmarkdown::html_document(). Adds +pipe_tables, +raw_html, +tex_math_single_backslash, +fenced_code_blocks, +auto_identifiers, +ascii_identifiers, +backtick_code_blocks, +autolink_bare_uris, +intraword_underscores, +strikeout, +hard_line_breaks markdown_strict. number pandoc features disabled (see markdown_custom_options()), +yaml_metadata_block re-enabled, possible specify output function using YAML.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/markdown_github.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"github_markdown for rmarkdown — markdown_github","text":"","code":"markdown_github(fragment.only = FALSE, break_on_error = FALSE, ...)"},{"path":"http://rubenarslan.github.io/formr/reference/markdown_github.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"github_markdown for rmarkdown — markdown_github","text":"fragment.whether get html fragment break_on_error error R code execution interrupt rendering rendering continue, defaults FALSE ... arguments passed rmarkdown::html_document()","code":""},{"path":"http://rubenarslan.github.io/formr/reference/markdown_hard_line_breaks.html","id":null,"dir":"Reference","previous_headings":"","what":"hard line breaks — markdown_hard_line_breaks","title":"hard line breaks — markdown_hard_line_breaks","text":"Custom rmarkdown template based standard rmarkdown::html_document(), hard line breaks. add pandoc '+hard_line_breaks' argument origin format markdown.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/markdown_hard_line_breaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"hard line breaks — markdown_hard_line_breaks","text":"","code":"markdown_hard_line_breaks(...)"},{"path":"http://rubenarslan.github.io/formr/reference/markdown_hard_line_breaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"hard line breaks — markdown_hard_line_breaks","text":"... arguments passed rmarkdown::html_document()","code":""},{"path":"http://rubenarslan.github.io/formr/reference/miss_frac.html","id":null,"dir":"Reference","previous_headings":"","what":"percentage of missings for each variable in a data.frame — miss_frac","title":"percentage of missings for each variable in a data.frame — miss_frac","text":"functions simply reports number missings percentage maximum number rows. also works single variables.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/miss_frac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"percentage of missings for each variable in a data.frame — miss_frac","text":"","code":"miss_frac(df, vars = 1:NCOL(df))"},{"path":"http://rubenarslan.github.io/formr/reference/miss_frac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"percentage of missings for each variable in a data.frame — miss_frac","text":"df data.frame variable vars subset variables, defaults ","code":""},{"path":"http://rubenarslan.github.io/formr/reference/miss_frac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"percentage of missings for each variable in a data.frame — miss_frac","text":"","code":"fruits = c('apple', 'banana', NA, 'pear', 'pinapple', NA) pets = c('cat', 'dog', 'anteater', NA, NA, NA) favorites = data.frame(fruits, pets) miss_frac(favorites) #>    fruits      pets  #> 0.3333333 0.5000000  miss_frac(favorites$fruits) #> [1] 0.3333333 miss_frac(favorites, 2) #> [1] 0.5"},{"path":"http://rubenarslan.github.io/formr/reference/n_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the number of missings in a variable or dataset. If missings are an explicit level in a factor variable, this function defaults to reporting them anyway. — n_missing","title":"Returns the number of missings in a variable or dataset. If missings are an explicit level in a factor variable, this function defaults to reporting them anyway. — n_missing","text":"Returns number missings variable dataset. missings explicit level factor variable, function defaults reporting anyway.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/n_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the number of missings in a variable or dataset. If missings are an explicit level in a factor variable, this function defaults to reporting them anyway. — n_missing","text":"","code":"n_missing(x, exclude = NA)"},{"path":"http://rubenarslan.github.io/formr/reference/n_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the number of missings in a variable or dataset. If missings are an explicit level in a factor variable, this function defaults to reporting them anyway. — n_missing","text":"x variable exclude needed factors. defaults NA (count level=missing missing), setting 0 allows count level=missing nonmissing","code":""},{"path":"http://rubenarslan.github.io/formr/reference/n_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the number of missings in a variable or dataset. If missings are an explicit level in a factor variable, this function defaults to reporting them anyway. — n_missing","text":"","code":"data(beavers) beaver1$activ[1:10] = NA n_missing(beaver1$activ) #> [1] 10 beaver1$activ = factor(beaver1$activ, exclude = NULL) sum(is.na(beaver1$activ)) #> [1] 0 n_missing(beaver1$activ) #> [1] 10 n_missing(beaver1$activ, exclude = NULL) #> [1] 0"},{"path":"http://rubenarslan.github.io/formr/reference/n_nonmissing.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the number of nonmissings in a variable or dataset. If missings are an explicit level in a factor variable, this function defaults to excluding them anyway. — n_nonmissing","title":"Returns the number of nonmissings in a variable or dataset. If missings are an explicit level in a factor variable, this function defaults to excluding them anyway. — n_nonmissing","text":"Returns number nonmissings variable dataset. missings explicit level factor variable, function defaults excluding anyway.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/n_nonmissing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the number of nonmissings in a variable or dataset. If missings are an explicit level in a factor variable, this function defaults to excluding them anyway. — n_nonmissing","text":"","code":"n_nonmissing(x, exclude = NA)"},{"path":"http://rubenarslan.github.io/formr/reference/n_nonmissing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the number of nonmissings in a variable or dataset. If missings are an explicit level in a factor variable, this function defaults to excluding them anyway. — n_nonmissing","text":"x variable exclude needed factors. defaults NA (count level=missing missing), setting 0 allows count level=missing nonmissing","code":""},{"path":"http://rubenarslan.github.io/formr/reference/n_nonmissing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the number of nonmissings in a variable or dataset. If missings are an explicit level in a factor variable, this function defaults to excluding them anyway. — n_nonmissing","text":"","code":"data(beavers) beaver1$activ[1:10] = NA n_nonmissing(beaver1$activ) #> [1] 104 beaver1$activ = factor(beaver1$activ, exclude = NULL) sum(!is.na(beaver1$activ)) #> [1] 114 n_nonmissing(beaver1$activ) #> [1] 104 n_nonmissing(beaver1$activ, exclude = NULL) #> [1] 114"},{"path":"http://rubenarslan.github.io/formr/reference/next_day.html","id":null,"dir":"Reference","previous_headings":"","what":"checks whether a new day has broken (date has increased by at least one day) — next_day","title":"checks whether a new day has broken (date has increased by at least one day) — next_day","text":"simple utility functions avoid looped Skip Backwards/Skip Forwards formr true repeatedly.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/next_day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"checks whether a new day has broken (date has increased by at least one day) — next_day","text":"","code":"next_day(date = NULL)"},{"path":"http://rubenarslan.github.io/formr/reference/next_day.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"checks whether a new day has broken (date has increased by at least one day) — next_day","text":"date defaults .formr$last_action_date, hidden variable automatically set formr.org. coerced POSIXct.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/next_day.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"checks whether a new day has broken (date has increased by at least one day) — next_day","text":"","code":"next_day(Sys.time()) #> [1] \"2025-01-24 CET\""},{"path":"http://rubenarslan.github.io/formr/reference/paste.knit_asis.html","id":null,"dir":"Reference","previous_headings":"","what":"paste.knit_asis — paste.knit_asis","title":"paste.knit_asis — paste.knit_asis","text":"Helper function knit_asis objects, useful e.g. asis_knit_child() used loop.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/paste.knit_asis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"paste.knit_asis — paste.knit_asis","text":"","code":"paste.knit_asis(..., sep = \"\\n\\n\\n\", collapse = \"\\n\\n\\n\")"},{"path":"http://rubenarslan.github.io/formr/reference/paste.knit_asis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"paste.knit_asis — paste.knit_asis","text":"... passed paste() sep defaults two empty lines, passed paste() collapse defaults two empty lines, passed paste()","code":""},{"path":"http://rubenarslan.github.io/formr/reference/paste.knit_asis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"paste.knit_asis — paste.knit_asis","text":"Works like paste() sep collapse argument set two empty lines","code":""},{"path":"http://rubenarslan.github.io/formr/reference/paste.knit_asis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"paste.knit_asis — paste.knit_asis","text":"","code":"paste.knit_asis(\"# Headline 1\", \"## Headline 2\") #> # Headline 1 #>  #>  #> ## Headline 2"},{"path":"http://rubenarslan.github.io/formr/reference/print.knit_asis.html","id":null,"dir":"Reference","previous_headings":"","what":"Print new lines in knit_asis outputs — print.knit_asis","title":"Print new lines in knit_asis outputs — print.knit_asis","text":"Print new lines knit_asis outputs","code":""},{"path":"http://rubenarslan.github.io/formr/reference/print.knit_asis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print new lines in knit_asis outputs — print.knit_asis","text":"","code":"# S3 method for class 'knit_asis' print(x, ...)"},{"path":"http://rubenarslan.github.io/formr/reference/print.knit_asis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print new lines in knit_asis outputs — print.knit_asis","text":"x knit_asis object ... ignored","code":""},{"path":"http://rubenarslan.github.io/formr/reference/props.html","id":null,"dir":"Reference","previous_headings":"","what":"proportions table — props","title":"proportions table — props","text":"quick easy function  show proportions values variable, defaults including missings","code":""},{"path":"http://rubenarslan.github.io/formr/reference/props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"proportions table — props","text":"","code":"props(..., exclude = NULL)"},{"path":"http://rubenarslan.github.io/formr/reference/props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"proportions table — props","text":"... passed crosstabs exclude defaults NULL (.e. includes NA)","code":""},{"path":"http://rubenarslan.github.io/formr/reference/props.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"proportions table — props","text":"","code":"x = NA props(~ x) #> x #> <NA>  #>    1"},{"path":"http://rubenarslan.github.io/formr/reference/qplot_on_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot normed values as a barchart — qplot_on_bar","title":"Plot normed values as a barchart — qplot_on_bar","text":"Pass data.frame z-standardised values (x - Mean)/SD, variable names, get bar chart. Getting data.frame shape probably mean using tidyr dplyr data.frame se column ymax/ymin columns, displayed top bars bars become transparent.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/qplot_on_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot normed values as a barchart — qplot_on_bar","text":"","code":"qplot_on_bar(   normed_data,   ylab = \"Your value\",   xlab = \"Trait\",   title = \"\",   y_ticks = c(\"--\", \"-\", \"0\", \"+\", \"++\") )"},{"path":"http://rubenarslan.github.io/formr/reference/qplot_on_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot normed values as a barchart — qplot_on_bar","text":"normed_data dataset value column containing z-standardised value variable column containing labels values ylab Y-axis label, defaults \"Percentage people value\" xlab X-axis label, empty default, useful labeling plotted trait title Plot title y_ticks ticks labels -2,1,0,1 2 SDs around mean, default minuses, pluses average sign","code":""},{"path":"http://rubenarslan.github.io/formr/reference/qplot_on_bar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot normed values as a barchart — qplot_on_bar","text":"","code":"normed_data = data.frame(variable = c(\"Extraversion\",\"Openness\", \"Agreeableness\",\"Neuroticism\",\"Conscientiousness\"),  value = c(-3,1,-1,0.5,2)) # standardise value qplot_on_bar(normed_data, title = \"Your personality\")  normed_data = data.frame(variable = c(\"Extraversion\",\"Openness\", \"Agreeableness\",\"Neuroticism\",\"Conscientiousness\"),  value = c(-3,1,-1,0.5,2), se = c(0.2,0.3,0.2,0.25,0.4)) # standardise value qplot_on_bar(normed_data, title = \"Your personality\")"},{"path":"http://rubenarslan.github.io/formr/reference/qplot_on_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a normed value on the standard normal — qplot_on_normal","title":"Plot a normed value on the standard normal — qplot_on_normal","text":"Pass z-standardised value (x - Mean)/SD, get standard normal distribution.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/qplot_on_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a normed value on the standard normal — qplot_on_normal","text":"","code":"qplot_on_normal(   normed_value,   ylab = \"Percentage of other people with this value\",   xlab = \"\",   colour = \"blue\",   x_ticks = c(\"--\", \"-\", \"0\", \"+\", \"++\") )"},{"path":"http://rubenarslan.github.io/formr/reference/qplot_on_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a normed value on the standard normal — qplot_on_normal","text":"normed_value z-standardised value ylab Y-axis label, defaults \"Percentage people value\" xlab X-axis label, empty default, useful labeling plotted trait colour defaults blue x_ticks ticks labels -2,1,0,1 2 SDs around mean, default minuses, pluses average sign","code":""},{"path":"http://rubenarslan.github.io/formr/reference/qplot_on_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a normed value on the standard normal — qplot_on_normal","text":"","code":"normed_value = scale(x = 20, center = 14, scale = 5) # standardise value qplot_on_normal(normed_value, xlab = \"Extraversion\")"},{"path":"http://rubenarslan.github.io/formr/reference/qplot_on_polar.html","id":null,"dir":"Reference","previous_headings":"","what":"Time-polar plot — qplot_on_polar","title":"Time-polar plot — qplot_on_polar","text":"Pass data.frame z-standardised values (x - Mean)/SD, variable names, get bar chart. Getting data.frame shape probably mean using tidyr + dplyr. data.frame se column ymax/ymin columns, displayed top bars bars become transparent.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/qplot_on_polar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time-polar plot — qplot_on_polar","text":"","code":"qplot_on_polar(normed_data, ylab = \"Your value\", title = \"\")"},{"path":"http://rubenarslan.github.io/formr/reference/qplot_on_polar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time-polar plot — qplot_on_polar","text":"normed_data dataset value column containing z-standardised value variable column containing labels values ylab Y-axis label, defaults \"Percentage people value\" title Plot title","code":""},{"path":"http://rubenarslan.github.io/formr/reference/qplot_on_polar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time-polar plot — qplot_on_polar","text":"","code":"weekdays = c(\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\") normed_data = data.frame(variable = factor(weekdays, weekdays),    value = c(0,1,0.2,0.5,1.5,2,1)) # standardise value qplot_on_polar(normed_data, title = \"Your alcohol consumption across the week\")  normed_data = data.frame(variable = factor(1:24,1:24),    value = 3+rnorm(24), se = rep(0.2,24)) # standardise value qplot_on_polar(normed_data, title = \"Your mood around the clock\")"},{"path":"http://rubenarslan.github.io/formr/reference/random_date_in_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Random date in range — random_date_in_range","title":"Random date in range — random_date_in_range","text":"taken Dirk Eddelbuettel's answer http://stackoverflow.com//14721124/263054","code":""},{"path":"http://rubenarslan.github.io/formr/reference/random_date_in_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random date in range — random_date_in_range","text":"","code":"random_date_in_range(N, lower = \"2012/01/01\", upper = \"2012/12/31\")"},{"path":"http://rubenarslan.github.io/formr/reference/random_date_in_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random date in range — random_date_in_range","text":"N desired number random dates lower lower limit upper upper limit","code":""},{"path":"http://rubenarslan.github.io/formr/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>%","code":""},{"path":"http://rubenarslan.github.io/formr/reference/render_text.html","id":null,"dir":"Reference","previous_headings":"","what":"render text — render_text","title":"render text — render_text","text":"Render text","code":""},{"path":"http://rubenarslan.github.io/formr/reference/render_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"render text — render_text","text":"","code":"render_text(text, ...)"},{"path":"http://rubenarslan.github.io/formr/reference/render_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"render text — render_text","text":"text written tmp file used input argument ... arguments passed rmarkdown::render()","code":""},{"path":"http://rubenarslan.github.io/formr/reference/rescue_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescue lost attributes — rescue_attributes","title":"Rescue lost attributes — rescue_attributes","text":"Taken codebook can use function items lost attributes wrangling Variables name (Duh) attributes overwritten. use care. Similar labelled::copy_labels().","code":""},{"path":"http://rubenarslan.github.io/formr/reference/rescue_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescue lost attributes — rescue_attributes","text":"","code":"rescue_attributes(df_no_attributes, df_with_attributes)"},{"path":"http://rubenarslan.github.io/formr/reference/rescue_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescue lost attributes — rescue_attributes","text":"df_no_attributes data frame missing attributes df_with_attributes data frame want restore attributes","code":""},{"path":"http://rubenarslan.github.io/formr/reference/reverse_labelled_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse labelled values — reverse_labelled_values","title":"Reverse labelled values — reverse_labelled_values","text":"Taken codebook package reverse underlying values numeric haven::labelled() vector keeping labels correct","code":""},{"path":"http://rubenarslan.github.io/formr/reference/reverse_labelled_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse labelled values — reverse_labelled_values","text":"","code":"reverse_labelled_values(x)"},{"path":"http://rubenarslan.github.io/formr/reference/reverse_labelled_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse labelled values — reverse_labelled_values","text":"x labelled vector","code":""},{"path":"http://rubenarslan.github.io/formr/reference/reverse_labelled_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse labelled values — reverse_labelled_values","text":"return labelled vector underlying values reversed","code":""},{"path":"http://rubenarslan.github.io/formr/reference/reverse_labelled_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse labelled values — reverse_labelled_values","text":"","code":"x <- haven::labelled(rep(1:3, each = 3), c(Bad = 1, Good = 5)) x #> <labelled<integer>[9]> #> [1] 1 1 1 2 2 2 3 3 3 #>  #> Labels: #>  value label #>      1   Bad #>      5  Good reverse_labelled_values(x) #> <labelled<integer>[9]> #> [1] 5 5 5 4 4 4 3 3 3 #>  #> Labels: #>  value label #>      5   Bad #>      1  Good"},{"path":"http://rubenarslan.github.io/formr/reference/text_message_clickatell.html","id":null,"dir":"Reference","previous_headings":"","what":"Send text message via Clickatell — text_message_clickatell","title":"Send text message via Clickatell — text_message_clickatell","text":"Connects Clickatell using token sends text message.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/text_message_clickatell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send text message via Clickatell — text_message_clickatell","text":"","code":"text_message_clickatell(To, Body, Token, return_result = F)"},{"path":"http://rubenarslan.github.io/formr/reference/text_message_clickatell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send text message via Clickatell — text_message_clickatell","text":"number texting (usually without zeroes beginning) Body text message body/text Token Clickatell token return_result whether return simply TRUE/FALSE success/failure whole result","code":""},{"path":"http://rubenarslan.github.io/formr/reference/text_message_clickatell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send text message via Clickatell — text_message_clickatell","text":"","code":"if (FALSE) { # \\dontrun{ text_message_clickatell(   To = '492222',    Body = 'Hello friend',    Token = 'Tokentokentoken')   } # }"},{"path":"http://rubenarslan.github.io/formr/reference/text_message_massenversand.html","id":null,"dir":"Reference","previous_headings":"","what":"Send text message via Massenversand.de — text_message_massenversand","title":"Send text message via Massenversand.de — text_message_massenversand","text":"Connects Massenversand.de using token sends text message.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/text_message_massenversand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send text message via Massenversand.de — text_message_massenversand","text":"","code":"text_message_massenversand(   To,   From,   Body,   id,   pw,   time = \"0\",   msgtype = \"t\",   tarif = \"OA\",   test = \"0\",   return_result = F )"},{"path":"http://rubenarslan.github.io/formr/reference/text_message_massenversand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send text message via Massenversand.de — text_message_massenversand","text":"number texting (usually without zeroes beginning) number texting Body text message body/text id Massenversand ID pw Massenversand password time see provider API (defaults immediate sending) msgtype see provider API tarif see provider API test see provider API return_result whether return simply TRUE/FALSE success/failure whole result","code":""},{"path":"http://rubenarslan.github.io/formr/reference/text_message_massenversand.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send text message via Massenversand.de — text_message_massenversand","text":"","code":"if (FALSE) { # \\dontrun{ text_message_massenversand(   To = '492222',    From = '15005000',    Body = 'Hello friend',   id = 'ID',    pw = 'Tokentokentoken')   } # }"},{"path":"http://rubenarslan.github.io/formr/reference/text_message_twilio.html","id":null,"dir":"Reference","previous_headings":"","what":"Send text message via Twilio — text_message_twilio","title":"Send text message via Twilio — text_message_twilio","text":"Connects Twilio using token sends text message.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/text_message_twilio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send text message via Twilio — text_message_twilio","text":"","code":"text_message_twilio(To, From, Body, Account, Token, return_result = F)"},{"path":"http://rubenarslan.github.io/formr/reference/text_message_twilio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send text message via Twilio — text_message_twilio","text":"number texting (usually without zeroes beginning) number texting Body text message body/text Account Twilio account ID Token Twili token return_result whether return simply TRUE/FALSE success/failure whole result","code":""},{"path":"http://rubenarslan.github.io/formr/reference/text_message_twilio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send text message via Twilio — text_message_twilio","text":"","code":"text_message_twilio(   To = '492222',    From = '15005000',    Body = 'Hello friend',   Account = 'ID', Token = 'Tokentokentoken') #> [1] FALSE"},{"path":"http://rubenarslan.github.io/formr/reference/time_passed.html","id":null,"dir":"Reference","previous_headings":"","what":"checks how much time has passed relative to the user's last action — time_passed","title":"checks how much time has passed relative to the user's last action — time_passed","text":"checks much time passed. can choose unit. Implemented via lubridate::dseconds(), periods, .e. minute 60 seconds, hour 60 minutes, day 24 hours. Months years well-defined durations, offer anyway convenience.  Returns true false.","code":""},{"path":"http://rubenarslan.github.io/formr/reference/time_passed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"checks how much time has passed relative to the user's last action — time_passed","text":"","code":"time_passed(   years = 0,   months = 0,   weeks = 0,   days = 0,   hours = 0,   minutes = 0,   seconds = 0,   time = NULL )"},{"path":"http://rubenarslan.github.io/formr/reference/time_passed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"checks how much time has passed relative to the user's last action — time_passed","text":"years 365 days months 30 days weeks 7 days days 24 hours hours 60 minutes minutes 60 seconds seconds argument lubridate::dseconds() time defaults .formr$last_action_time, hidden variable automatically set formr.org","code":""},{"path":"http://rubenarslan.github.io/formr/reference/time_passed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"checks how much time has passed relative to the user's last action — time_passed","text":"","code":"time_passed(hours = 7, time = Sys.time()) #> [1] FALSE"},{"path":"http://rubenarslan.github.io/formr/reference/word_document.html","id":null,"dir":"Reference","previous_headings":"","what":"word_document from rmarkdown, but has an added option not to break on error — word_document","title":"word_document from rmarkdown, but has an added option not to break on error — word_document","text":"Exactly like rmarkdown::word_document(), one added argument","code":""},{"path":"http://rubenarslan.github.io/formr/reference/word_document.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"word_document from rmarkdown, but has an added option not to break on error — word_document","text":"","code":"word_document(..., break_on_error = FALSE)"},{"path":"http://rubenarslan.github.io/formr/reference/word_document.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"word_document from rmarkdown, but has an added option not to break on error — word_document","text":"... arguments passed rmarkdown::word_document() break_on_error error R code execution interrupt rendering rendering continue, defaults FALSE","code":""},{"path":"http://rubenarslan.github.io/formr/news/index.html","id":"formr-0111","dir":"Changelog","previous_headings":"","what":"formr 0.11.1","title":"formr 0.11.1","text":"Update formr_store_keys accept secret email arguments.","code":""},{"path":"http://rubenarslan.github.io/formr/news/index.html","id":"formr-0110","dir":"Changelog","previous_headings":"","what":"formr 0.11.0","title":"formr 0.11.0","text":"enable 2FA formr_store_keys/formr_login backup entire studies one function using formr_backup_study download many surveys formr_backup_surveys removed cruft unrelated formr (ls_by_class, n_missing, loadRDS, crosstabs, props) added tests","code":""}]
